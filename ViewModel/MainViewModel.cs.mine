using System.Collections.Generic;
using System.Windows;
using System.Windows.Input;
using Futurama.Helpers;
using Futurama.Messages;
using Futurama.Model;
using Futurama.Model.Matrix;
using Futurama.View;
using GalaSoft.MvvmLight.Messaging;
using UpdateControls.Collections;
using UpdateControls.XAML;
using ViewModelBase = GalaSoft.MvvmLight.ViewModelBase;
using sr = Futurama.Repository.SystemRepository;
using System.Linq;


namespace Futurama.ViewModel
{
    public class MainViewModel : ViewModelBase
    {

        public ICommand CloseApp
        {
            get { return MakeCommand.Do(CloseAllWindows); }
        }

        private static void CloseAllWindows()
        {
            sr.Windows.CloseAll();
        }

        public ICommand OpenConnectionView
        {
            get { return MakeCommand.Do(OpenConnectionWindow); }
        }

        private static void OpenConnectionWindow()
        {
            if (sr.Windows.IsActivated(sr.Connection.GdConnection)) return;
            var view = new CommunicationView();
            sr.Windows.Add(sr.Connection.GdConnection, view);
            view.Show();
        }


        private static void OpenZoneMatrix()
        {
            if (sr.Windows.IsActivated(sr.FuturamaSys.PanelModel.GdSettingId)) return;

            var w = new PanelView();
            w.Show();

            sr.Windows.Add(sr.FuturamaSys.PanelModel.GdSettingId, w);
        }
        
        public ICommand OpenEmail
        {
            get { return MakeCommand.Do(OpenEmailSettings); }
        }

        private static void OpenEmailSettings()
        {
            var w = new SendEmailView();
            w.Show();
        }

        public MainViewModel()
        {
            sr.FuturamaSys = new FuturamaSysModel { MainUnits = new IndependentList<MainUnitModel>(), PanelModel = new PanelModel() };
        }

        public IEnumerable<MainUnitViewModel> OpenTabs
        {
            get
            {
                return (from p in sr.FuturamaSys.MainUnits
                        select new MainUnitViewModel(p, () => sr.FuturamaSys.MainUnits.IndexOf(p)));
            }
        }
        public ICommand OpenFile
        {
            get { return MakeCommand.Do(Open); }
        }

        public ICommand OpenMatrix
        {
            get { return MakeCommand.When(() => sr.FuturamaSys.MainUnits.Count > 0).Do(OpenZoneMatrix); }
        }

        public ICommand CloseFile
        {
            get { return MakeCommand.When(() => sr.FuturamaSys.MainUnits.Count > 0).Do(Close); }

        }

        public ICommand InsertNewUnit
        {
            get { return MakeCommand.When(() => sr.FuturamaSys.MainUnits.Count > 0).Do(AddMainUnit); }
        }

        public ICommand SaveFile
        {
            get { return MakeCommand.When(() => sr.FuturamaSys.MainUnits.Count > 0).Do(Save); }
        }

        public ICommand NewSystem
        {
            get { return MakeCommand.Do(New); }
        }

        private void New(MessageBoxResult r)
        {
            if (r == MessageBoxResult.Yes)
            {
                Save();
                sr.FuturamaSys.MainUnits.Clear();
                AddMainUnit();
            }

            if (r == MessageBoxResult.No)
            {
                sr.FuturamaSys.MainUnits.Clear();
                AddMainUnit();
            }
        }

        private void New()
        {
            if (sr.FuturamaSys.MainUnits.Count < 1)
            {
                New(MessageBoxResult.No);
            }
            else
            {
                var cdm = new CustomDialogMessage
                              {
                                  DialogCaption = "Save",
                                  DialogText = "Would you like to save the current design?",
                                  DialogButtons = MessageBoxButton.YesNoCancel,
                                  Message = new DialogMessage("Hey", New)
                              };

                var mes = Messenger.Default;

                mes.Send(cdm, "mb1");
            }
        }

        /// <summary>
        /// Reads repository contents from from file
        /// </summary>
        private static void Open()
        {
            sr.OpenFromXml();
        }

        private static void Close()
        {
            sr.FuturamaSys.MainUnits.Clear();
            // sr.FuturamaSys = null;
        }

        private static void Save()
        {
            
        }

        private static bool SaveFdbck()
        {
            var fileName = FileManagement.SaveFileDialog();
            if (!FileManagement.SaveObject(sr.FuturamaSys, fileName))
            {
                var cdm = new CustomDialogMessage
                {
                    DialogCaption = "Save",
                    DialogText = "File not saved.",
                    DialogButtons = MessageBoxButton.OK,
                    //Message = new DialogMessage("Hey", Save)
                };

                var mes = Messenger.Default;

                mes.Send(cdm, "mb1");
                return false;
            }
            return true;
        }

        public string SystemName
        {
            get { return sr.FuturamaSys.SystemName; }
            set { sr.FuturamaSys.SystemName = value; }
        }

        /// <summary>
        /// adds a new mainunit to the system
        /// </summary>
        /// <returns>the mainUnit reference object</returns>
        public void AddMainUnit()
        {

            var mu = new MainUnitModel();
            sr.FuturamaSys.MainUnits.Add(mu);
        }
    }



}
